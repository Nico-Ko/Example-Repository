// Polygon.idl : IDL source for Polygon
//

// This file will be processed by the MIDL tool to
// produce the type library (Polygon.tlb) and marshalling code.

#include "olectl.h"
import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(cd1f2176-9058-4e2b-abaf-ecc703ca832f),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IPolyCtl : IDispatch
{
	[propput, bindable, requestedit, id(DISPID_FILLCOLOR)]
	HRESULT FillColor([in]OLE_COLOR clr);
	[propget, bindable, requestedit, id(DISPID_FILLCOLOR)]
	HRESULT FillColor([out, retval]OLE_COLOR* pclr);
	[propget, id(1), helpstring("property Sides")] HRESULT Sides([out, retval] short* pVal);
	[propput, id(1), helpstring("property Sides")] HRESULT Sides([in] short newVal);
};

[
	uuid(4069cf31-301c-4d97-a532-c99fa94041b3),
	version(1.0),
]
library PolygonLib
{
	importlib("stdole2.tlb");
	[
		uuid(0b624377-52db-4963-ad0b-2e648ebc3da1)
	]
	dispinterface _IPolyCtlEvents
	{
		properties:
		methods:
			[id(1), helpstring("method ClickIn")] void ClickIn([in] LONG x,[in] LONG y);
			[id(2), helpstring("method ClickOut")] void ClickOut([in] LONG x,[in] LONG y);
	};
	[
		uuid(b7ef56bd-c04f-4db6-b7e1-0ff4bea3a711),
		control
	]
	coclass PolyCtl
	{
		[default] interface IPolyCtl;
		[default, source] dispinterface _IPolyCtlEvents;
	};
};

